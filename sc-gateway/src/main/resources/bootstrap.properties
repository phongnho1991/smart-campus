spring.application.name=sc-gateway

server.port=8088

spring.cloud.nacos.config.prefix=${spring.application.name}
spring.cloud.nacos.config.server-addr=server.nacos:8848
spring.cloud.nacos.config.context-path=nacos
spring.cloud.nacos.config.group=smart-campus
spring.cloud.nacos.config.enabled=true

spring.cloud.nacos.discovery.server-addr=${spring.cloud.nacos.config.server-addr}

spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.enabled=true

#feign.sentinel.enable=true
spring.cloud.sentinel.transport.dashboard=localhost:9080
spring.cloud.sentinel.filter.enabled=false

#spring.cloud.gateway.default-filters[0].name=TokenRelay

#spring.security.oauth2.client.registration.login-client.provider=sc-auth
#spring.security.oauth2.client.registration.login-client.client-id=system
#spring.security.oauth2.client.registration.login-client.client-secret=$2a$10$QN9vg9iX3WFovHnDX7bJO.rWWDkS0VP7HYhV.HDiVEE56xPwZfjKe
#spring.security.oauth2.client.registration.login-client.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.login-client.scope=app
#spring.security.oauth2.client.registration.login-client.authorization-grant-type=authorization_code
##
##
#spring.security.oauth2.client.provider.sc-auth.user-info-uri=http://192.168.0.231:8083/auth/user
#spring.security.oauth2.client.provider.sc-auth.token-uri=http://192.168.0.231:8083/oauth/token
#spring.security.oauth2.client.provider.sc-auth.authorization-uri=http://192.168.0.231:8083/oauth/authorize
#spring.security.oauth2.client.provider.sc-auth.jwk-set-uri=http://192.168.0.231:8083/oauth/token_key
#spring.security.oauth2.client.provider.sc-auth.user-name-attribute=name


spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://192.168.0.231:8083/oauth/check_token
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://192.168.0.231:8083/oauth/check_token
security.oauth2.resource.jwt.key-uri=http://192.168.0.231:8083/oauth/token_key
security.oauth2.resource.jwk.key-set-uri=http://192.168.0.231:8083/oauth/check_token

#spring.autoconfigure.exclude=org.springframework.boot.actuate.autoconfigure.security.reactive.ReactiveManagementWebSecurityAutoConfiguration


#security:
#oauth2:
#client:
#registration:
#login-client:
#provider: uaa
#client-id: login-client
#client-secret: secret
#authorization-grant-type: authorization_code
#redirect-uri-template: "{baseUrl}/login/oauth2/code/{registrationId}"
#scope: openid,profile,email,resource.read
#provider:
#uaa:
#authorization-uri: http://localhost:8090/uaa/oauth/authorize
#token-uri: http://localhost:8090/uaa/oauth/token
#user-info-uri: http://localhost:8090/uaa/userinfo
#user-name-attribute: sub
#jwk-set-uri: http://localhost:8090/uaa/token_keys

#spring.cloud.gateway.routes[0].id=sc-base
#spring.cloud.gateway.routes[0].uri=lb://sc-base
#spring.cloud.gateway.routes[0].predicates[0].name=sc-base
#spring.cloud.gateway.routes[0].predicates[0].args[patter]=/base/**